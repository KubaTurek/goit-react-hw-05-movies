{"version":3,"file":"static/js/434.22a28c98.chunk.js","mappings":"8SACAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAa,mCAAG,6GAEFD,EAAAA,EAAAA,IACrB,6EAHuB,cAEnBE,EAFmB,yBAKlBA,EAASC,KAAKC,SALI,wFAAH,qDASbC,EAAgB,mCAAG,WAAMC,GAAN,gGAERN,EAAAA,EAAAA,IAAA,iBACRM,EADQ,6DAFQ,cAEtBC,EAFsB,yBAKrBA,EAAMJ,MALe,wFAAH,sDAShBK,EAAS,mCAAG,WAAMF,GAAN,gGAEFN,EAAAA,EAAAA,IAAA,iBACPM,EADO,qEAFE,cAEfG,EAFe,yBAKdA,GALc,wFAAH,sDASTC,EAAY,mCAAG,WAAMJ,GAAN,gGAEFN,EAAAA,EAAAA,IAAA,iBACVM,EADU,4EAFE,cAElBK,EAFkB,yBAKjBA,EAAQR,KAAKC,SALI,wFAAH,sDASZQ,EAAU,mCAAG,WAAMC,GAAN,gGAEDb,EAAAA,EAAAA,IAAA,sFAC4Da,EAD5D,gCAFC,cAEhBC,EAFgB,yBAKfA,EAAOX,MALQ,wFAAH,qD,qICtCvB,EAA+B,6BAA/B,EAA4E,8BAA5E,EAA2H,+BAA3H,EAA8K,kCAA9K,EAA+N,6BAA/N,EAAoQ,sB,SCoEpQ,EA/De,WAAO,IAAD,EACnB,GAAwCY,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMP,EAAQM,EAAaE,IAAI,SASzBC,EAAiB,mCAAG,WAAMC,GAAN,8EACxBN,EAAgB,IADQ,UAEFL,EAAAA,EAAAA,IAAWW,GAFT,OAElBnB,EAFkB,OAGxBa,EAAgBb,GAHQ,2CAAH,sDAUvB,OAJAoB,EAAAA,EAAAA,YAAU,WACRF,EAAkBT,EACnB,GAAE,CAACA,KAGF,4BACE,gBAAKY,UAAWC,EAAhB,UACE,kBAAMC,SAAU,SAAAC,GAAK,OAlBV,SAAAA,GACfA,EAAMC,iBACNT,EAAgB,CAAEP,MAAOe,EAAME,OAAOC,MAAMR,OAC7C,CAe8BI,CAASC,EAAb,EAArB,WACE,kBACEH,UAAWC,EACXM,KAAK,OACLC,YAAY,gBACZC,KAAK,WAEP,mBAAQT,UAAWC,EAAoBM,KAAK,SAA5C,0BAKJ,eAAIP,UAAWC,EAAf,SACe,OAAZV,QAAY,IAAZA,GAAA,UAAAA,EAAcZ,eAAd,SAAuB+B,QAAoB,OAAVtB,EAChCG,EAAaZ,QAAQgC,KAAI,SAAAtB,GAAM,OAC7B,eAAoBW,UAAWC,EAA/B,UACE,UAAC,KAAD,CACEW,GAAE,UAAKvB,EAAOwB,IACdC,MAAO,CAAEC,KAAK,kBAAD,OAAoB3B,IAFnC,WAIE,gBACEY,UAAWC,EACXe,IAAK3B,EAAO4B,MACZC,IAAG,UA3CF,oCA2CE,OAAgB7B,EAAO8B,gBAE5B,uBAAI9B,EAAO4B,YAVN5B,EAAOwB,GADa,KAgB/B,qBAKT,C","sources":["components/api/api.js","webpack://goit-react-hw-05-movies/./src/pages/movies/movies.module.css?0ac1","pages/movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios.get(\n      '/trending/all/day?api_key=3d397a8b948d538760c15d5dd702d031&language=en-US'\n    );\n    return response.data.results;\n  } catch (error) {}\n};\n\nexport const fetchSingleMovie = async movieId => {\n  try {\n    const movie = await axios.get(\n      `/movie/${movieId}?api_key=3d397a8b948d538760c15d5dd702d031&language=en-US`\n    );\n    return movie.data;\n  } catch (error) {}\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const cast = await axios.get(\n      `/movie/${movieId}/credits?api_key=3d397a8b948d538760c15d5dd702d031&language=en-US`\n    );\n    return cast;\n  } catch (error) {}\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const reviews = await axios.get(\n      `/movie/${movieId}/reviews?api_key=3d397a8b948d538760c15d5dd702d031&language=en-US&page=1`\n    );\n    return reviews.data.results;\n  } catch (error) {}\n};\n\nexport const fetchQuery = async query => {\n  try {\n    const result = await axios.get(\n      `/search/movie?api_key=3d397a8b948d538760c15d5dd702d031&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return result.data;\n  } catch (error) {}\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"search__form\":\"movies_search__form__I80DJ\",\"search__input\":\"movies_search__input__xJN0r\",\"search__button\":\"movies_search__button__Jsczk\",\"search__container\":\"movies_search__container__z+rEm\",\"search__item\":\"movies_search__item__jGWOt\",\"image\":\"movies_image__Z23Rn\"};","import { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchQuery } from 'components/api/api';\nimport css from './movies.module.css';\n\nconst Movies = () => {\n  const [queryDetails, setQueryDetails] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  const imageURL = 'https://image.tmdb.org/t/p/w500/';\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: event.target.input.value });\n  };\n\n  const fetchQueryDetails = async value => {\n    setQueryDetails('');\n    const results = await fetchQuery(value);\n    setQueryDetails(results);\n  };\n\n  useEffect(() => {\n    fetchQueryDetails(query);\n  }, [query]);\n\n  return (\n    <div>\n      <div className={css.search__form}>\n        <form onSubmit={event => onSubmit(event)}>\n          <input\n            className={css.search__input}\n            type=\"text\"\n            placeholder=\"search a film\"\n            name=\"input\"\n          ></input>\n          <button className={css.search__button} type=\"submit\">\n            Search\n          </button>\n        </form>\n      </div>\n      <ul className={css.search__container}>\n        {queryDetails?.results?.length && query !== null ? (\n          queryDetails.results.map(result => (\n            <li key={result.id} className={css.search__item}>\n              <Link\n                to={`${result.id}`}\n                state={{ from: `/Movies/?query=${query}` }}\n              >\n                <img\n                  className={css.image}\n                  alt={result.title}\n                  src={`${imageURL}${result.poster_path}`}\n                />\n                <p>{result.title}</p>\n              </Link>\n            </li>\n          ))\n        ) : (\n          <p></p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","fetchTrending","response","data","results","fetchSingleMovie","movieId","movie","fetchCast","cast","fetchReviews","reviews","fetchQuery","query","result","useState","queryDetails","setQueryDetails","useSearchParams","searchParams","setSearchParams","get","fetchQueryDetails","value","useEffect","className","css","onSubmit","event","preventDefault","target","input","type","placeholder","name","length","map","to","id","state","from","alt","title","src","poster_path"],"sourceRoot":""}