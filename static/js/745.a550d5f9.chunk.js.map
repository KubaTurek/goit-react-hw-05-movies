{"version":3,"file":"static/js/745.a550d5f9.chunk.js","mappings":"8SAEaA,EAAa,mCAAG,0FAEzB,wGAFyB,kBAKFC,EAAAA,EAAAA,IAHvB,yGAFyB,cAKnBC,EALmB,yBAMlBA,EAASC,KAAKC,SANI,yFAAH,qDAUbC,EAAgB,mCAAG,WAAMC,GAAN,gFACxBC,EADwB,6CAC4BD,EAD5B,8EAGRL,EAAAA,EAAAA,IAAUM,GAHF,cAGtBC,EAHsB,yBAIrBA,EAAML,MAJe,yFAAH,sDAQhBM,EAAS,mCAAG,WAAMH,GAAN,gFACjBI,EADiB,6CAC2BJ,EAD3B,sFAGFL,EAAAA,EAAAA,IAAUS,GAHR,cAGfC,EAHe,yBAIdA,GAJc,yFAAH,sDAQTC,EAAY,mCAAG,WAAMN,GAAN,gFACpBI,EADoB,6CACwBJ,EADxB,6FAGFL,EAAAA,EAAAA,IAAUS,GAHR,cAGlBG,EAHkB,yBAIjBA,EAAQV,KAAKC,SAJI,yFAAH,sDAQZU,EAAU,mCAAG,WAAMC,GAAN,gFAClBL,EADkB,kHAC+FK,EAD/F,iDAGDd,EAAAA,EAAAA,IAAUS,GAHT,cAGhBM,EAHgB,yBAIfA,EAAOb,MAJQ,yFAAH,qD,qICnCvB,EAA+B,6BAA/B,EAA4E,8BAA5E,EAA2H,+BAA3H,EAA8K,kCAA9K,EAA+N,6BAA/N,EAAoQ,sB,SCuEpQ,EAlEe,WACb,OAAwCc,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMP,EAAQM,EAAaE,IAAI,SASzBC,EAAiB,mCAAG,WAAMC,GAAN,8EACxBN,EAAgB,IADQ,UAEFL,EAAAA,EAAAA,IAAWW,GAFT,OAElBrB,EAFkB,OAGxBe,EAAgBf,GAHQ,2CAAH,sDAUvB,OAJAsB,EAAAA,EAAAA,YAAU,WACRF,EAAkBT,EACnB,GAAE,CAACA,KAGF,4BACE,gBAAKY,UAAWC,EAAhB,UACE,kBAAMC,SAAU,SAAAC,GAAK,OAlBV,SAAAA,GACfA,EAAMC,iBACNT,EAAgB,CAAEP,MAAOe,EAAME,OAAOC,MAAMR,OAC7C,CAe8BI,CAASC,EAAb,EAArB,WACE,kBACEH,UAAWC,EACXM,KAAK,OACLC,YAAY,gBACZC,KAAK,WAEP,mBAAQT,UAAWC,EAAoBM,KAAK,SAA5C,0BAKJ,eAAIP,UAAWC,EAAf,SACIV,QACuBmB,IAAzBnB,EAAad,SACmB,IAAhCc,EAAad,QAAQkC,QACX,OAAVvB,EAGEG,EAAad,QAAQmC,KAAI,SAAAvB,GAAM,OAC7B,eAAoBW,UAAWC,EAA/B,UACE,UAAC,KAAD,CACEY,GAAE,UAAKxB,EAAOyB,IACdC,MAAO,CAAEC,KAAK,kBAAD,OAAoB5B,IAFnC,WAIE,gBACEY,UAAWC,EACXgB,IAAK5B,EAAO6B,MACZC,IAAG,UAhDF,oCAgDE,OAAgB9B,EAAO+B,gBAE5B,uBAAI/B,EAAO6B,YAVN7B,EAAOyB,GADa,KAF/B,qBAqBT,C","sources":["components/api/fetchapi.js","webpack://goit-react-hw-05-movies/./src/pages/movies/movies.module.css?0ac1","pages/movies/movies.js"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchTrending = async () => {\n  const url =\n    'https://api.themoviedb.org/3/trending/all/day?api_key=3d397a8b948d538760c15d5dd702d031&language=en-US';\n\n  try {\n    const response = await axios.get(url);\n    return response.data.results;\n  } catch (error) {}\n};\n\nexport const fetchSingleMovie = async movieId => {\n  const Singlevalue = `https://api.themoviedb.org/3/movie/${movieId}?api_key=3d397a8b948d538760c15d5dd702d031&language=en-US`;\n  try {\n    const movie = await axios.get(Singlevalue);\n    return movie.data;\n  } catch (error) {}\n};\n\nexport const fetchCast = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=3d397a8b948d538760c15d5dd702d031&language=en-US`;\n  try {\n    const cast = await axios.get(url);\n    return cast;\n  } catch (error) {}\n};\n\nexport const fetchReviews = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=3d397a8b948d538760c15d5dd702d031&language=en-US&page=1`;\n  try {\n    const reviews = await axios.get(url);\n    return reviews.data.results;\n  } catch (error) {}\n};\n\nexport const fetchQuery = async query => {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=3d397a8b948d538760c15d5dd702d031&language=en-US&query=${query}&page=1&include_adult=false`;\n  try {\n    const result = await axios.get(url);\n    return result.data;\n  } catch (error) {}\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"search__form\":\"movies_search__form__I80DJ\",\"search__input\":\"movies_search__input__xJN0r\",\"search__button\":\"movies_search__button__Jsczk\",\"search__container\":\"movies_search__container__z+rEm\",\"search__item\":\"movies_search__item__jGWOt\",\"image\":\"movies_image__Z23Rn\"};","import { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchQuery } from 'components/api/fetchapi';\nimport css from './movies.module.css';\n\nconst Movies = () => {\n  const [queryDetails, setQueryDetails] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  const imageURL = 'https://image.tmdb.org/t/p/w500/';\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: event.target.input.value });\n  };\n\n  const fetchQueryDetails = async value => {\n    setQueryDetails('');\n    const results = await fetchQuery(value);\n    setQueryDetails(results);\n  };\n\n  useEffect(() => {\n    fetchQueryDetails(query);\n  }, [query]);\n\n  return (\n    <div>\n      <div className={css.search__form}>\n        <form onSubmit={event => onSubmit(event)}>\n          <input\n            className={css.search__input}\n            type=\"text\"\n            placeholder=\"search a film\"\n            name=\"input\"\n          ></input>\n          <button className={css.search__button} type=\"submit\">\n            Search\n          </button>\n        </form>\n      </div>\n      <ul className={css.search__container}>\n        {!queryDetails ||\n        queryDetails.results === undefined ||\n        queryDetails.results.length === 0 ||\n        query === null ? (\n          <p></p>\n        ) : (\n          queryDetails.results.map(result => (\n            <li key={result.id} className={css.search__item}>\n              <Link\n                to={`${result.id}`}\n                state={{ from: `/Movies/?query=${query}` }}\n              >\n                <img\n                  className={css.image}\n                  alt={result.title}\n                  src={`${imageURL}${result.poster_path}`}\n                />\n                <p>{result.title}</p>\n              </Link>\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["fetchTrending","axios","response","data","results","fetchSingleMovie","movieId","Singlevalue","movie","fetchCast","url","cast","fetchReviews","reviews","fetchQuery","query","result","useState","queryDetails","setQueryDetails","useSearchParams","searchParams","setSearchParams","get","fetchQueryDetails","value","useEffect","className","css","onSubmit","event","preventDefault","target","input","type","placeholder","name","undefined","length","map","to","id","state","from","alt","title","src","poster_path"],"sourceRoot":""}