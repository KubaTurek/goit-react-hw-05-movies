{"version":3,"file":"static/js/135.85cda6bb.chunk.js","mappings":"8SACAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAa,mCAAG,6GAEFD,EAAAA,EAAAA,IACrB,6EAHuB,cAEnBE,EAFmB,yBAKlBA,EAASC,KAAKC,SALI,wFAAH,qDASbC,EAAgB,mCAAG,WAAMC,GAAN,gGAERN,EAAAA,EAAAA,IAAA,iBACRM,EADQ,6DAFQ,cAEtBC,EAFsB,yBAKrBA,EAAMJ,MALe,wFAAH,sDAShBK,EAAS,mCAAG,WAAMF,GAAN,gGAEFN,EAAAA,EAAAA,IAAA,iBACPM,EADO,qEAFE,cAEfG,EAFe,yBAKdA,GALc,wFAAH,sDASTC,EAAY,mCAAG,WAAMJ,GAAN,gGAEFN,EAAAA,EAAAA,IAAA,iBACVM,EADU,4EAFE,cAElBK,EAFkB,yBAKjBA,EAAQR,KAAKC,SALI,wFAAH,sDASZQ,EAAU,mCAAG,WAAMC,GAAN,gGAEDb,EAAAA,EAAAA,IAAA,sFAC4Da,EAD5D,gCAFC,cAEhBC,EAFgB,yBAKfA,EAAOX,MALQ,wFAAH,qD,8ICtCvB,EAAmC,uCAAnC,EAA0F,oCAA1F,EAA+I,qCAA/I,EAAoM,oCAApM,EAA4P,wCAA5P,EAA6S,6B,SCwE7S,EAnEqB,WACnB,IAAQG,GAAYS,EAAAA,EAAAA,MAAZT,QACR,GAAsCU,EAAAA,EAAAA,YAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAiB,mCAAG,WAAMC,GAAN,8EACxBJ,EAAe,IADS,UAEJb,EAAAA,EAAAA,IAAiBiB,GAFb,OAElBf,EAFkB,OAGxBW,EAAeX,GAHS,2CAAH,uDAMvBgB,EAAAA,EAAAA,YAAU,WACRF,EAAkBf,EACnB,GAAE,CAACA,IAGJ,YAAuBkB,IAAhBP,GACL,iCACE,SAAC,KAAD,CAAMQ,GAAIN,EAASO,MAAMC,KAAzB,UACE,mBAAQC,UAAWC,EAAmBC,KAAK,SAA3C,+BAIF,iBAAKF,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXE,IAXS,mCAWOd,EAAYe,YAC5BC,IAAKhB,EAAYiB,SAEnB,iBAAKN,UAAWC,EAAhB,WACE,wBAAKZ,EAAYiB,MAAQjB,EAAYiB,MAAQjB,EAAYkB,QACzD,yCAAiBlB,EAAYmB,iBAC7B,sCACA,uBAAInB,EAAYoB,YAChB,oCACA,uBACGpB,EAAYqB,QACXrB,EAAYqB,OAAOC,KAAI,SAAAC,GAAK,OAC1B,4BAAsBA,EAAML,KAA5B,OAAWK,EAAMlB,GADS,aAMpC,4BACE,eAAIM,UAAWC,EAAf,qCACA,2BACE,yBACE,SAAC,KAAD,CAAMJ,GAAG,OAAOC,MAAO,CAAEC,KAAM,YAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMF,GAAG,UAAUC,MAAO,CAAEC,KAAM,YAAlC,2BAKJ,oBAASC,UAAWC,EAApB,UACE,SAAC,KAAD,aAKN,iDAEH,C","sources":["components/api/api.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios.get(\n      '/trending/all/day?api_key=3d397a8b948d538760c15d5dd702d031&language=en-US'\n    );\n    return response.data.results;\n  } catch (error) {}\n};\n\nexport const fetchSingleMovie = async movieId => {\n  try {\n    const movie = await axios.get(\n      `/movie/${movieId}?api_key=3d397a8b948d538760c15d5dd702d031&language=en-US`\n    );\n    return movie.data;\n  } catch (error) {}\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const cast = await axios.get(\n      `/movie/${movieId}/credits?api_key=3d397a8b948d538760c15d5dd702d031&language=en-US`\n    );\n    return cast;\n  } catch (error) {}\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const reviews = await axios.get(\n      `/movie/${movieId}/reviews?api_key=3d397a8b948d538760c15d5dd702d031&language=en-US&page=1`\n    );\n    return reviews.data.results;\n  } catch (error) {}\n};\n\nexport const fetchQuery = async query => {\n  try {\n    const result = await axios.get(\n      `/search/movie?api_key=3d397a8b948d538760c15d5dd702d031&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return result.data;\n  } catch (error) {}\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movie__container\":\"MovieDetails_movie__container__Frdjx\",\"movie__poster\":\"MovieDetails_movie__poster__HNrMD\",\"movie__details\":\"MovieDetails_movie__details__FDB39\",\"movie__button\":\"MovieDetails_movie__button__8b2IM\",\"movie__additional\":\"MovieDetails_movie__additional__iw3r-\",\"outlet\":\"MovieDetails_outlet__NCB4c\"};","import { Link, Outlet, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchSingleMovie } from 'components/api/api';\nimport css from './MovieDetails.module.css';\nimport { useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [singleMovie, setSingleMovie] = useState();\n  const location = useLocation();\n\n  const fetchMovieDetails = async id => {\n    setSingleMovie('');\n    const movie = await fetchSingleMovie(id);\n    setSingleMovie(movie);\n  };\n\n  useEffect(() => {\n    fetchMovieDetails(movieId);\n  }, [movieId]);\n\n  const imageURL = 'https://image.tmdb.org/t/p/w500/';\n  return singleMovie !== undefined ? (\n    <>\n      <Link to={location.state.from}>\n        <button className={css.movie__button} type=\"button\">\n          &#x2190; Go back\n        </button>\n      </Link>\n      <div className={css.movie__container}>\n        <img\n          className={css.movie__poster}\n          src={imageURL + singleMovie.poster_path}\n          alt={singleMovie.title}\n        ></img>\n        <div className={css.movie__details}>\n          <h1>{singleMovie.title ? singleMovie.title : singleMovie.name}</h1>\n          <p>Users score: {singleMovie.vote_average}</p>\n          <h2>Overview</h2>\n          <p>{singleMovie.overview}</p>\n          <h2>Genres</h2>\n          <p>\n            {singleMovie.genres &&\n              singleMovie.genres.map(genre => (\n                <span key={genre.id}>{genre.name}, </span>\n              ))}\n          </p>\n        </div>\n      </div>\n      <div>\n        <h2 className={css.movie__additional}>Additional Information</h2>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: './Movies' }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: './Movies' }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <section className={css.outlet}>\n          <Outlet />\n        </section>\n      </div>\n    </>\n  ) : (\n    <div>No Details available</div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","fetchTrending","response","data","results","fetchSingleMovie","movieId","movie","fetchCast","cast","fetchReviews","reviews","fetchQuery","query","result","useParams","useState","singleMovie","setSingleMovie","location","useLocation","fetchMovieDetails","id","useEffect","undefined","to","state","from","className","css","type","src","poster_path","alt","title","name","vote_average","overview","genres","map","genre"],"sourceRoot":""}